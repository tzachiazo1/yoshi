// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CommonViewerScriptEntry template generates correct template w/o controllers 1`] = `
"
  import {createControllersWithDescriptors, initAppForPageWrapper} from 'yoshi-flow-editor-runtime/build/viewerScript.js';
  
  

  
  import * as viewerApp from 'project/src/app.ts';
    var importedApp = viewerApp;


  var sentryConfig = null;

  var experimentsConfig = {
    scope: 'test-scope'
  };

  export const initAppForPage = initAppForPageWrapper(importedApp.initAppForPage, sentryConfig, experimentsConfig);
  export const createControllers = createControllersWithDescriptors([]);
"
`;

exports[`CommonViewerScriptEntry template generates correct template with a single controller 1`] = `
"
  import {createControllersWithDescriptors, initAppForPageWrapper} from 'yoshi-flow-editor-runtime/build/viewerScript.js';
  
  import controller0 from 'project/src/components/button/controller.ts';

  
  import * as viewerApp from 'project/src/app.ts';
    var importedApp = viewerApp;


  var sentryConfig = null;

  var experimentsConfig = {
    scope: 'test-scope'
  };

  export const initAppForPage = initAppForPageWrapper(importedApp.initAppForPage, sentryConfig, experimentsConfig);
  export const createControllers = createControllersWithDescriptors([{ method: controller0,
          widgetType: \\"WIDGET_OUT_OF_IFRAME\\",
          id: \\"123\\" }]);
"
`;

exports[`CommonViewerScriptEntry template generates correct template with a single controller and without viewerEntryFileName 1`] = `
"
  import {createControllersWithDescriptors, initAppForPageWrapper} from 'yoshi-flow-editor-runtime/build/viewerScript.js';
  
  import controller0 from 'project/src/components/button/controller.ts';

  
  var importedApp = {};


  var sentryConfig = null;

  var experimentsConfig = {
    scope: 'test-scope'
  };

  
  export const createControllers = createControllersWithDescriptors([{ method: controller0,
          widgetType: \\"WIDGET_OUT_OF_IFRAME\\",
          id: \\"123\\" }]);
"
`;

exports[`CommonViewerScriptEntry template generates correct template with controllerId override 1`] = `
"
  import {createControllersWithDescriptors, initAppForPageWrapper} from 'yoshi-flow-editor-runtime/build/viewerScript.js';
  
  import controller0 from 'project/src/components/todo/controller.ts';
import controller1 from 'project/src/components/todo/controller.ts';

  
  import * as viewerApp from 'project/src/app.ts';
    var importedApp = viewerApp;


  var sentryConfig = null;

  var experimentsConfig = {
    scope: 'test-scope'
  };

  export const initAppForPage = initAppForPageWrapper(importedApp.initAppForPage, sentryConfig, experimentsConfig);
  export const createControllers = createControllersWithDescriptors([{ method: controller0,
          widgetType: \\"STUDIO_WIDGET\\",
          id: \\"123\\" }, { method: controller1,
          widgetType: \\"STUDIO_WIDGET\\",
          id: \\"09876\\" }]);
"
`;

exports[`CommonViewerScriptEntry template generates correct template with multiple controllers 1`] = `
"
  import {createControllersWithDescriptors, initAppForPageWrapper} from 'yoshi-flow-editor-runtime/build/viewerScript.js';
  
  import controller0 from 'project/src/components/todo/controller.ts';
import controller1 from 'project/src/components/todo/controller.ts';

  
  import * as viewerApp from 'project/src/app.ts';
    var importedApp = viewerApp;


  var sentryConfig = null;

  var experimentsConfig = {
    scope: 'test-scope'
  };

  export const initAppForPage = initAppForPageWrapper(importedApp.initAppForPage, sentryConfig, experimentsConfig);
  export const createControllers = createControllersWithDescriptors([{ method: controller0,
          widgetType: \\"WIDGET_OUT_OF_IFRAME\\",
          id: \\"123\\" }, { method: controller1,
          widgetType: \\"WIDGET_OUT_OF_IFRAME\\",
          id: \\"567\\" }]);
"
`;

exports[`CommonViewerScriptEntry template generates correct template with sentry 1`] = `
"
  import {createControllersWithDescriptors, initAppForPageWrapper} from 'yoshi-flow-editor-runtime/build/viewerScript.js';
  
  import controller0 from 'project/src/components/button/controller.ts';

  
  import * as viewerApp from 'project/src/app.ts';
    var importedApp = viewerApp;


  var sentryConfig = {
      DSN: 'https:xxx@123',
      id: 'xxx',
      projectName: 'project-name',
      teamName: 'team-name',
    };

  var experimentsConfig = {
    scope: 'test-scope'
  };

  export const initAppForPage = initAppForPageWrapper(importedApp.initAppForPage, sentryConfig, experimentsConfig);
  export const createControllers = createControllersWithDescriptors([{ method: controller0,
          widgetType: \\"WIDGET_OUT_OF_IFRAME\\",
          id: \\"123\\" }]);
"
`;
